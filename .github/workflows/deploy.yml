name: Build & Deploy Domino

on:
   push:
    branches: [ master ]

jobs:
    build:
        name: Build Web
        runs-on: ubuntu-latest
        steps:
          - name: Checkout source
            uses: actions/checkout@v3
            with:
              set-safe-directory: false

          - name: Setup Node.js
            uses: actions/setup-node@v3
            with:
              node-version: 16.x

          - name: Cache node modules
            id: cache-nodemodules
            uses: actions/cache@v2
            env:
                cache-name: cache-node-modules
            with:
                # caching node_modules
              path: node_modules
              key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                  ${{ runner.os }}-build-${{ env.cache-name }}-
                  ${{ runner.os }}-build-
                  ${{ runner.os }}-

          - name: Install app dependencies
            run: yarn install --frozen-lockfile
        
          - name:  Release Artifact - Web
            uses: actions/upload-artifact@v3
            with:
              name: web-app-release
              path: |
                ecosystem.config.js
                dist
                public


    deploy:
      name: Deplopy Web
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Dowload Artifact
          uses: actions/download-artifact@v2
          with:
            name: web-app-release

        - name: Write SSH keys
          run: |
              install -m 600 -D /dev/null ~/.ssh/id_rsa
              echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
              ssh-keyscan -H ${{secrets.SSH_HOST}} > ~/.ssh/known_hosts
  
        - name: Deploy with rsync
          run: rsync -rav --delete ./ ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}:${{secrets.WORK_DIR}}

        - name: Restart Apps
          uses: appleboy/ssh-action@v0.1.7
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
              cd ${{secrets.WORK_DIR}}
              pm2 start ecosystem.config.js
              pm2 restart all
              pm2 save
